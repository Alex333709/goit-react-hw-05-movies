{"version":3,"file":"static/js/41.f833b9ed.chunk.js","mappings":"0OAEaA,EAA0BC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAIpCC,EAAqBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+BAI9BG,EAAoBL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kCAI7BK,EAAoBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oD,SC0BzC,EA/BuB,WACrB,IAAAO,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAUlC,OARAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,2BAEGC,MAAK,SAAAC,GAAI,OAAIJ,EAAeI,EAAK,IACjCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,kCAAmCA,EAAM,GAC3E,GAAG,IAGEE,MAAMC,QAAQV,IAKjBW,EAAAA,EAAAA,MAACzB,EAAuB,CAAA0B,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAACvB,EAAkB,CAAAsB,SAChBZ,EAAYc,KAAI,SAAAC,GAAK,OACpBF,EAAAA,EAAAA,KAACrB,EAAiB,CAAAoB,UAChBC,EAAAA,EAAAA,KAACnB,EAAiB,CAACsB,KAAI,WAAAC,OAAaF,EAAMG,IAAKN,SAC5CG,EAAMI,OAASJ,EAAMK,QAFFL,EAAMG,GAIV,UAZnBL,EAAAA,EAAAA,KAAA,OAAAD,SAAK,sCAiBhB,C,mCCpCMS,EAAW,+BACXC,EAAU,mCAEVnB,EAAc,CAClBoB,yBAAwB,WACtB,OAAOC,EAAAA,EAAAA,IACA,GAADP,OAAII,EAAQ,gCAAAJ,OAA+BK,IAC9ClB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,KAAKqB,OAAO,IACtCpB,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAoB,iBAAgB,SAACC,GACf,OAAOJ,EAAAA,EAAAA,IACA,GAADP,OACCI,EAAQ,0BAAAJ,OAAyBK,EAAO,sCAAAL,OAAqCW,IAEjFxB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,KAAKqB,OAAO,IACtCpB,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAsB,gBAAe,SAACC,GAEd,OAAON,EAAAA,EAAAA,IACA,GAADP,OAAII,EAAQ,WAAAJ,OAAUa,EAAO,aAAAb,OAAYK,IAC5ClB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAI,IAC9BC,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAwB,eAAc,SAACD,GACb,OAAON,EAAAA,EAAAA,IACA,GAADP,OAAII,EAAQ,WAAAJ,OAAUa,EAAO,qBAAAb,OAAoBK,IACpDlB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAI,IAC9BC,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAyB,kBAAiB,SAACF,GAChB,OAAON,EAAAA,EAAAA,IACA,GAADP,OAAII,EAAQ,WAAAJ,OAAUa,EAAO,qBAAAb,OAAoBK,IACpDlB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAI,IAC9BC,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,GAGF,K","sources":["components/HomePage/Homepage.styled.js","components/HomePage/Homepage.jsx","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrendingMoviesContainer = styled.div`\n  text-align: center;\n`;\n\nexport const TrendingMoviesList = styled.ul`\n  list-style: none;\n`;\n\nexport const TrendingMovieItem = styled.li`\n  margin-bottom: 1rem;\n`;\n\nexport const TrendingMovieLink = styled.a`\n  color: #333;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport fetchMovies from '../../services/movie-api';\nimport {\n  TrendingMoviesContainer,\n  TrendingMoviesList,\n  TrendingMovieItem,\n  TrendingMovieLink,\n} from './Homepage.styled';\n\nconst TrendingMovies = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies\n      .fetchTrendingMoviesByDay()\n      .then(data => setTrendMovies(data))\n      .catch(error => console.error('Error fetching trending movies:', error));\n  }, []);\n\n  // Перевіримо, чи є trendMovies масивом\n  if (!Array.isArray(trendMovies)) {\n    return <div>Error: trendMovies is not an array</div>;\n  }\n\n  return (\n    <TrendingMoviesContainer>\n      <h1>Trending Movies</h1>\n      <TrendingMoviesList>\n        {trendMovies.map(movie => (\n          <TrendingMovieItem key={movie.id}>\n            <TrendingMovieLink href={`/movies/${movie.id}`}>\n              {movie.title || movie.name}\n            </TrendingMovieLink>\n          </TrendingMovieItem>\n        ))}\n      </TrendingMoviesList>\n    </TrendingMoviesContainer>\n  );\n};\n\nexport default TrendingMovies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9b08f524057dbce5849a7bccd964443';\n\nconst fetchMovies = {\n  fetchTrendingMoviesByDay() {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n      .then(response => response.data.results)\n      .catch(error => error);\n  },\n\n  fetchSearchMovie(querySearch) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${querySearch}`\n      )\n      .then(response => response.data.results)\n      .catch(error => error);\n  },\n\n  fetchMoviesById(movieId) {\n    // console.log('Fetching movie with ID:', movieId);\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n};\n\nexport default fetchMovies;\n"],"names":["TrendingMoviesContainer","styled","_templateObject","_taggedTemplateLiteral","TrendingMoviesList","_templateObject2","TrendingMovieItem","_templateObject3","TrendingMovieLink","_templateObject4","_useState","useState","_useState2","_slicedToArray","trendMovies","setTrendMovies","useEffect","fetchMovies","then","data","catch","error","console","Array","isArray","_jsxs","children","_jsx","map","movie","href","concat","id","title","name","BASE_URL","API_KEY","fetchTrendingMoviesByDay","axios","response","results","fetchSearchMovie","querySearch","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}