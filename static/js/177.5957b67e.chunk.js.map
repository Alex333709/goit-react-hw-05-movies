{"version":3,"file":"static/js/177.5957b67e.chunk.js","mappings":"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","sources":["components/MoviePage/Moviepage.jsx","services/movie-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport fetchMovies from '../../services/movie-api';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const queryValue = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (queryValue) {\n      setSearchQuery(queryValue);\n    }\n  }, [queryValue]);\n\n  useEffect(() => {\n    if (!queryValue) {\n      setMovies([]);\n      return;\n    }\n\n    // Перевірка, щоб запускати запит тільки після введення мінімум 3 символів\n    if (searchQuery.length >= 3) {\n      fetchMovies\n        .fetchSearchMovie(queryValue)\n        .then(results => setMovies(results))\n        .catch(() => {\n          setMovies([]);\n        });\n    }\n  }, [queryValue, searchQuery]);\n\n  const handleQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    navigate(`/movies?query=${searchQuery}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={searchQuery}\n          onChange={handleQueryChange}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      {movies.length === 0 && searchQuery && searchQuery.length >= 3 && (\n        <p>No movies found.</p>\n      )}\n\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <a href={`/movies/${id}?query=${searchQuery}`}>{title}</a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9b08f524057dbce5849a7bccd964443';\n\nconst fetchMovies = {\n  fetchTrendingMoviesByDay() {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n      .then(response => response.data.results)\n      .catch(error => error);\n  },\n\n  fetchSearchMovie(querySearch) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${querySearch}`\n      )\n      .then(response => response.data.results)\n      .catch(error => error);\n  },\n\n  fetchMoviesById(movieId) {\n    // console.log('Fetching movie with ID:', movieId);\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n};\n\nexport default fetchMovies;\n"],"names":["location","useLocation","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","movies","setMovies","queryValue","URLSearchParams","search","get","useEffect","length","fetchMovies","then","results","catch","_jsxs","_Fragment","children","onSubmit","event","preventDefault","concat","_jsx","type","autoComplete","autoFocus","placeholder","value","onChange","target","map","_ref","id","title","href","BASE_URL","API_KEY","fetchTrendingMoviesByDay","axios","response","data","error","fetchSearchMovie","querySearch","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}