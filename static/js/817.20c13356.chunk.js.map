{"version":3,"file":"static/js/817.20c13356.chunk.js","mappings":"yPAEaA,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8DAMxBC,EAAWH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iCAIrBG,EAAWL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gCAInBK,EAAgBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iC,SCqBrC,EAhCa,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAMpB,OAJAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eAA2BT,GAASU,MAAK,SAAAC,GAAA,IAAGL,EAAIK,EAAJL,KAAI,OAAOC,EAAQD,EAAK,GACtE,GAAG,CAACN,KAGFY,EAAAA,EAAAA,KAACtB,EAAW,CAAAuB,SACTP,EAAKQ,OAAS,EACbR,EAAKS,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAS,OAC3CC,EAAAA,EAAAA,MAAC3B,EAAQ,CAAAmB,SAAA,EACPD,EAAAA,EAAAA,KAAA,OACEU,IACEH,EAAY,mCAAAI,OAC2BJ,GACnC,kBAENK,IAAI,MAENZ,EAAAA,EAAAA,KAAChB,EAAQ,CAAAiB,SAAEK,IACVE,IAAaR,EAAAA,EAAAA,KAACd,EAAa,CAAAe,SAAEO,MAVjBH,EAWJ,KAGbL,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6BAIX,C,mCCjCMY,EAAW,+BACXC,EAAU,mCAEVjB,EAAc,CAClBkB,yBAAwB,WACtB,OAAOC,EAAAA,EAAAA,IACA,GAADL,OAAIE,EAAQ,gCAAAF,OAA+BG,IAC9ChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,KAAKC,OAAO,IACtCC,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAC,iBAAgB,SAACC,GACf,OAAOP,EAAAA,EAAAA,IACA,GAADL,OACCE,EAAQ,0BAAAF,OAAyBG,EAAO,sCAAAH,OAAqCY,IAEjFzB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,KAAKC,OAAO,IACtCC,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAG,gBAAe,SAACpC,GAEd,OAAO4B,EAAAA,EAAAA,IACA,GAADL,OAAIE,EAAQ,WAAAF,OAAUvB,EAAO,aAAAuB,OAAYG,IAC5ChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAI,IAC9BE,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAI,eAAc,SAACrC,GACb,OAAO4B,EAAAA,EAAAA,IACA,GAADL,OAAIE,EAAQ,WAAAF,OAAUvB,EAAO,qBAAAuB,OAAoBG,IACpDhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAI,IAC9BE,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,EAEAK,kBAAiB,SAACtC,GAChB,OAAO4B,EAAAA,EAAAA,IACA,GAADL,OAAIE,EAAQ,WAAAF,OAAUvB,EAAO,qBAAAuB,OAAoBG,IACpDhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAI,IAC9BE,OAAM,SAAAC,GAAK,OAAIA,CAAK,GACzB,GAGF,K","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n`;\n\nexport const CastItem = styled.div`\n  text-align: center;\n`;\n\nexport const CastName = styled.p`\n  font-weight: bold;\n`;\n\nexport const CastCharacter = styled.p`\n  font-style: italic;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchMovies from '../../services/movie-api';\nimport { CastWrapper, CastItem, CastName, CastCharacter } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMovies.fetchMovieCast(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  return (\n    <CastWrapper>\n      {cast.length > 0 ? (\n        cast.map(({ id, name, profile_path, character }) => (\n          <CastItem key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : 'not found image'\n              }\n              alt=\"\"\n            />\n            <CastName>{name}</CastName>\n            {character && <CastCharacter>{character}</CastCharacter>}\n          </CastItem>\n        ))\n      ) : (\n        <p>not found any cast info</p>\n      )}\n    </CastWrapper>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9b08f524057dbce5849a7bccd964443';\n\nconst fetchMovies = {\n  fetchTrendingMoviesByDay() {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n      .then(response => response.data.results)\n      .catch(error => error);\n  },\n\n  fetchSearchMovie(querySearch) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${querySearch}`\n      )\n      .then(response => response.data.results)\n      .catch(error => error);\n  },\n\n  fetchMoviesById(movieId) {\n    // console.log('Fetching movie with ID:', movieId);\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => error);\n  },\n};\n\nexport default fetchMovies;\n"],"names":["CastWrapper","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastName","_templateObject3","CastCharacter","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovies","then","_ref","_jsx","children","length","map","_ref2","id","name","profile_path","character","_jsxs","src","concat","alt","BASE_URL","API_KEY","fetchTrendingMoviesByDay","axios","response","data","results","catch","error","fetchSearchMovie","querySearch","fetchMoviesById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}