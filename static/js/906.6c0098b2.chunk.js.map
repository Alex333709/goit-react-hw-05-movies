{"version":3,"file":"static/js/906.6c0098b2.chunk.js","mappings":"wLAwCA,UArCgB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QAEjBC,QAAQC,IAAI,oBAAqBF,GAEjC,IAAAG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAqBpB,OAnBAI,EAAAA,EAAAA,YAAU,WACRR,QAAQC,IAAI,oBAAqBF,GAC5BA,GAELU,EAAAA,EAAAA,kBACqBV,GAClBW,MAAK,SAAAC,GACAA,GAAeA,EAAYC,QAC7BL,EAAQI,EAAYC,SAEpBL,EAAQ,GAEZ,IACCM,OAAM,SAAAC,GACLd,QAAQc,MAAMA,GACdP,EAAQ,GACV,GACJ,GAAG,CAACR,KAGFgB,EAAAA,EAAAA,KAAA,MAAAC,SACGV,EAAKW,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC9BC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,KACLL,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,MAFGF,EAGJ,KAIb,C,mCCpCMI,EAAW,+BACXC,EAAU,mCAEVf,EAAc,CAClBgB,yBAAwB,WACtB,OAAOC,EAAAA,EAAAA,IACA,GAADC,OAAIJ,EAAQ,gCAAAI,OAA+BH,IAC9Cd,MAAK,SAAAkB,GAAQ,OAAIA,EAAStB,KAAKM,OAAO,IACtCC,OAAM,SAAAC,GACLd,QAAQc,MAAM,sBAAuBA,EAEvC,GACJ,EAEAe,iBAAgB,SAACC,GACf,OAAOJ,EAAAA,EAAAA,IACA,GAADC,OACCJ,EAAQ,0BAAAI,OAAyBH,EAAO,sCAAAG,OAAqCG,IAEjFpB,MAAK,SAAAkB,GAAQ,OAAIA,EAAStB,KAAKM,OAAO,IACtCC,OAAM,SAAAC,GACLd,QAAQc,MAAM,sBAAuBA,EAEvC,GACJ,EAEAiB,gBAAe,SAAChC,GAEd,OAAO2B,EAAAA,EAAAA,IACA,GAADC,OAAIJ,EAAQ,WAAAI,OAAU5B,EAAO,aAAA4B,OAAYH,IAC5Cd,MAAK,SAAAkB,GAAQ,OAAIA,EAAStB,IAAI,IAC9BO,OAAM,SAAAC,GACLd,QAAQc,MAAM,sBAAuBA,EAEvC,GACJ,EAEAkB,eAAc,SAACjC,GACb,OAAO2B,EAAAA,EAAAA,IACA,GAADC,OAAIJ,EAAQ,WAAAI,OAAU5B,EAAO,qBAAA4B,OAAoBH,IACpDd,MAAK,SAAAkB,GAAQ,OAAIA,EAAStB,IAAI,IAC9BO,OAAM,SAAAC,GACLd,QAAQc,MAAM,sBAAuBA,EAEvC,GACJ,EAEAmB,kBAAiB,SAAClC,GAChB,OAAO2B,EAAAA,EAAAA,IACA,GAADC,OAAIJ,EAAQ,WAAAI,OAAU5B,EAAO,qBAAA4B,OAAoBH,IACpDd,MAAK,SAAAkB,GAAQ,OAAIA,EAAStB,IAAI,IAC9BO,OAAM,SAAAC,GACLd,QAAQc,MAAM,sBAAuBA,EAEvC,GACJ,GAGF,K","sources":["components/Review/Reviews.jsx","services/movie-api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fetchMovies from '../../services/movie-api';\n\nconst Reviews = ({ movieId }) => {\n  // Додано логування movieId для перевірки\n  console.log('Received movieId:', movieId);\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    console.log('Received movieId:', movieId); // Add this line\n    if (!movieId) return;\n\n    fetchMovies\n      .fetchMovieReviews(movieId)\n      .then(reviewsData => {\n        if (reviewsData && reviewsData.results) {\n          setData(reviewsData.results);\n        } else {\n          setData([]);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        setData([]);\n      });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {data.map(({ id, author, content }) => (\n        <li key={id}>\n          <h3>{author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9b08f524057dbce5849a7bccd964443';\n\nconst fetchMovies = {\n  fetchTrendingMoviesByDay() {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n      .then(response => response.data.results)\n      .catch(error => {\n        console.error('There was an error:', error);\n        // або показати повідомлення користувачеві\n      });\n  },\n\n  fetchSearchMovie(querySearch) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${querySearch}`\n      )\n      .then(response => response.data.results)\n      .catch(error => {\n        console.error('There was an error:', error);\n        // або показати повідомлення користувачеві\n      });\n  },\n\n  fetchMoviesById(movieId) {\n    // console.log('Fetching movie with ID:', movieId);\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.error('There was an error:', error);\n        // або показати повідомлення користувачеві\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.error('There was an error:', error);\n        // або показати повідомлення користувачеві\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.error('There was an error:', error);\n        // або показати повідомлення користувачеві\n      });\n  },\n};\n\nexport default fetchMovies;\n"],"names":["_ref","movieId","console","log","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetchMovies","then","reviewsData","results","catch","error","_jsx","children","map","_ref2","id","author","content","_jsxs","BASE_URL","API_KEY","fetchTrendingMoviesByDay","axios","concat","response","fetchSearchMovie","querySearch","fetchMoviesById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}